import TelegramBot, { Message } from "node-telegram-bot-api";
import { setUserData,getUserData } from "../handlers/userData";


export const Bench = (bot: TelegramBot, msg: Message) => {
  const chatId = msg.chat.id;
  const text = msg.text?.trim();
  if (!text) return;

  const userData = getUserData(chatId);

  if (userData.BS === undefined) {
    const BS = parseFloat(text);
    if (!isNaN(BS) && BS > 0) {
      setUserData(chatId, { BS });

      const age = userData.age ?? 0;
      const weight = userData.weight ?? 0;

      let evaluation = '';
      if (age < 15) {
        if (BS >= weight * 1.2) evaluation = 'üî• –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!';
        else if (BS >= weight * 0.8) evaluation = '–ù–µ–ø–ª–æ—Ö–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π!';
        else evaluation = '–ï—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏!';
      } else {
        if (BS >= weight * 1.5) evaluation = 'üî• –¢—ã —Å–∏–ª—ë–Ω!';
        else if (BS >= weight) evaluation = '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å';
        else evaluation = '–ü—Ä–æ–¥–æ–ª–∂–∞–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è!';
      }

      bot.sendMessage(chatId, evaluation);
      bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã.');
    } else {
      bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∂–∏–º (–≤ –∫–≥).');
    }
    return;
  }
};
